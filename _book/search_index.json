[
["demography.html", "9 Demography 9.1 Summary of the model 9.2 Analytical appendix and further readings", " 9 Demography In the previous chapters, we have looked at the transmission of information between individuals. We have seen that relatively simple mechanisms at the individual-level can lead to population-level outcomes (e.g. the fixation of a rare cultural trait). We have also seen the importance of the characteristics of individuals (e.g. for success and prestige bias) in cultural processes. What we have not yet looked at is how the characteristics of the population may affect the outcome of cultural dynamics. In the following three chapters we will have a closer look at how: population size (demography), population structure (social networks), and group structured populations (with migration) can influence cultural evolution. To start, why would demography matter to cultural evolution? As long as information is transmitted among individuals and between generations, the size of the population should not play a role. In theory, this statement is true but it relies on a crucial assumption: information transfer is not only complete (all information from the previous generation is transmitted to the next generation) but also error-free. However, from many lab experiments, we know that copying information is an error-prone process. In this chapter, we will look at how those errors affect infromation accumulation and how population size is argumenting this process. A number of studies have looked at population effects. Shennan, Scott, and Kosslyn (2015) provide a good overivew over a variety of approaches and questions. For example, in their model, Ghirlanda, Enquist, and Perc (2010), investigate the interplay between cultural innovations and cultural loss. While it would be trivial to say that culture accumulates where the rate of cultural innovation is higher than the rate of cultural loss, this model allows for two additional complicating mechanisms: (1) it lets innovations affect carrying capacity (and so the number of innovators), and (2) it allows trait corruption (i.e. a trait that was adaptive before can become maladaptive later, e.g. because it allows the over-exploitation of a resource). Another well-known study is that by Joseph Henrich (2004). His model takes inspiration from the archaeological record of Tasmania, which shows a detirioration of some and the persistence of other cultural traits after Tasmania was cut-off from Australia at the end of the last ice age. Henrich developes a compelling analytical model to show that the same adaptive processes in cultural evolution can result in the improvement and retention of simple skills but also in the deterioration and even loss of complex skills. The principle idea is the following: information transmission from one generation to another (or from one individual to another, here it does not make a difference) has a random component (error rate) that will lead to most individauls failing to achieving the same skill level as their cultural model, whereas a few will match and - even fewer - exceed that skill level. Imagine a group of students who try to acquire the skills to manufacture a spear. As imitation is imperfect, and memorising and recalling action sequences is error-prone some students will end up with a spear that is inferior to the one of their cultural model. A few individuals might achieve a similar or even higher skill level than their cultural model. These ‘new masters’ will become the cultural models of the next generation. Fig. 9.1 is shwoing this principle. # data &lt;- data.frame(skill = rep(c(&quot;simple&quot;,&quot;complex&quot;), each=6000), # z = c(rlogis(n=6000, location=-7, scale=1), # rlogis(n=6000, location=-9, scale=1))) library(extraDistr) data &lt;- data.frame(skill = rep(c(&quot;simple&quot;,&quot;complex&quot;), each=6000), z = c(rgumbel(n=6000, mu=-7, sigma=2), rgumbel(n=6000, mu=-9, sigma=2))) ggplot(data, aes(x=z, col=skill)) + geom_density() + geom_vline(xintercept=0, col=&quot;grey&quot;, linetype=2) + theme_bw() + theme(axis.text=element_blank(), axis.ticks=element_blank()) + xlab(&quot;imitator value z&quot;) + ylab(&quot;probability imitatior acquires z&quot;) Figure 9.1: Shown are the probability distributions to acquire a specific skill level for two different skills (one that is easy to learn and one that is more complex and therefore harder to learn). Given that learning is error-prone more individuals will acquire a skill level that is lower than that of a cultural model (its level is indicated by the vertical dashed line) through imitation (left of the dashed line). A few individauls will achieve higher skill levels (right of the dashed line). For the complex skill the probability to be above the skill level of the cultural model is lower (smaller area under the curve) than for simple skills. Given that the new skill level is essentially drawn from a probability distribution around the value of the individual that is imitated, the new average skill value of the population will not only depend on how frequent and severe copying errors are (that is, how skewed the distribution is to the right) but also on how many individuals try to imitate. The smaller the pool of imitators, the fewer individuals will achieve a higher skill level and so, over time the skill will deteriorate. Henrich provides an analytical model to explain how societies below a critical size (of cultural learners) might lose complex (or even simple) cultural traits over time. We will attempt to re-create his results using an individaul-based model. We begin with a very simple learning loop. We have a population of \\(N=1000\\) individuals, each with a skill level \\(z\\) for a particular skill (which we initiate with random values drawn fron a uniform distribution, \\(U(0,1)\\)). The average skill level is \\(\\bar{z}\\). We want to calculate what the new average skill level is after all individuals attempt to imitate the most successful individual (the one where \\(z\\) is largest). Each individual then receives a new \\(z\\)-value that is drawn from a Gumbel distribution (which we can get from the extraDistr package). This distribution is controlled by two values, \\(\\mu\\) (location) and \\(\\beta\\) (scale). To model imperfect imitation, we can vary \\(\\beta\\) and we can subtract an amount \\(\\alpha\\) from \\(\\mu\\). If learning was perfect \\(\\alpha\\) and \\(\\beta\\) would be zero. If something is easy to learn, \\(\\alpha\\) is small (and large if it is hard to learn). If people make very similar mistakes, \\(\\beta\\) is small (and large if people make widely different mistakes). Once we have drawn new values for \\(z\\), we calcualte the average change in \\(z\\), \\(\\Delta \\bar{z}\\), and then replace the original \\(z\\)-values to restart the loop. Rounds &lt;- 5000 N &lt;- 1000 f &lt;- rep(NA, N) z &lt;- runif(n=N, min=0, max=1) zbar &lt;- rep(NA, Rounds) beta &lt;- 1 alpha &lt;- 7 for(r in 1:Rounds){ # update f # for perfect identification of most skilful individual f &lt;- as.numeric(z == max(z)) # choose who to observe obs &lt;- sample(x=1:N, prob=f, replace=T) # calculate new z # znew &lt;- rlogis(n=N, location=z[obs]-alpha, scale=beta) znew &lt;- rgumbel(n=N, mu=z[obs]-alpha, sigma=beta) # record average z zbar[r] &lt;- mean(znew-z) # update z z &lt;- znew } We let the simulation run for \\(5000\\) rounds and plot the results. plot(zbar, type=&quot;l&quot;, xlab=&quot;time&quot;, ylab=&quot;change in z&quot;) We find that \\(\\Delta \\bar z\\) quickly plateaus at about 0.48. On average the population would improve this skill over time. Let us now write a function that can perform this loop repeatedly and average \\(\\Delta \\bar z\\) over all those repetitions to receive a more stable result. # automate process demography_model &lt;- function(R, N, alpha, beta, repeats){ res &lt;- lapply(1:repeats, function(r){ z &lt;- runif(n=N, min=0, max=1) zbar &lt;- rep(NA, R) for(r in 1:R){ # we simplify and ommit f and obs by assuming all individuals observe the best individual # znew &lt;- rlogis(n=N, location=z[ which.max(z) ]-alpha, scale=beta) # alternatively, use rgumbel function from the extraDistr package znew &lt;- rgumbel(n=N, mu=max(z)-alpha, sigma=beta) zbar[r] &lt;- mean(znew-z) z &lt;- znew } return(mean(zbar)) }) mean(unlist(res)) } With this function we can now run the simulation repeatedly for a single set of parameters. demography_model(R=100, N=5000, alpha=7, beta=1, repeats=10) ## [1] 2.086531 Now, we have everythint we need to run the simulation for different population sizes. We will also run it for two different skill complexities: simple (\\(\\alpha/\\beta=7\\)) and complex (\\(\\alpha/\\beta=9\\)). sizes &lt;- c(2, seq(100,6100,by=250)) res &lt;- lapply(sizes, demography_model, R=200, alpha=7, beta=1, repeats=20) res2 &lt;- lapply(sizes, demography_model, R=200, alpha=9, beta=1, repeats=20) df &lt;- data.frame(N = sizes, zbar = c(unlist(res), unlist(res2)), trait=rep(c(&quot;simple&quot;,&quot;complex&quot;), each=length(sizes))) In the last line of this chunck we have created a data.frame with the results for both skills and for the different population sizes. Now, we can plot the results. library(ggplot2) ggplot(df) + geom_line(aes(x=N, y=zbar, color=trait)) + xlab(&quot;Effective population size&quot;) + ylab(&quot;Change in average skill level, z bar&quot;) + geom_hline(yintercept=0) + theme_bw() Figure 9.2: The effect of population size on the average change in skill level in the population. In Fig. 9.2 we can see that the simple skill (blue) intercepts the x-axis at much smaller population sizes than the complex trait. That means, a simple trait can be maintained by much smaller populations, whereas larger populations of imitators are required for complex traits. Henrich calls the the minimum population size required to maintain a skill the critical population size, \\(N^\\star\\). How can we calculate \\(N^\\star\\) for different skill complexities? Note that when you use the logarithmic population size to plot Fig. 9.2, the resulting graphs are almost linear (see 9.3). ggplot(df) + geom_line(aes(x=log(N), y=zbar, color=trait)) + xlab(&quot;log(Effective population size)&quot;) + ylab(&quot;Change in average skill level, z bar&quot;) + geom_hline(yintercept=0) + theme_bw() Figure 9.3: The same as in Fig. 9.2 but using log on population sizes. And so, we could use a linear fit and then solve for \\(y=0\\) to calculate \\(N^\\star\\). fit &lt;- lm(zbar ~ log(N), df[df$trait==&quot;simple&quot;,]) print(fit) ## ## Call: ## lm(formula = zbar ~ log(N), data = df[df$trait == &quot;simple&quot;, ]) ## ## Coefficients: ## (Intercept) log(N) ## -6.4404 0.9973 N_star &lt;- exp(solve(coef(fit)[-1], -coef(fit)[1])) N_star ## [1] 637.6806 Of course in the last step we also have to take the exponent of the resulting value to revert the log function. We see that a simple trait with a low alpha/beta ratio requires a minimum population size of about 638. Let us now calculate the \\(N^\\star\\) values for different trait complexities. sizes &lt;- seq(100,6100,by=500) res &lt;- do.call(&quot;rbind&quot;, lapply(seq(4,9,.5), function(alpha){ tmp_z &lt;- unlist(lapply(X=sizes, FUN=demography_model, R=200, alpha=alpha, beta=1, repeats=5)) fit &lt;- lm(tmp_z ~ log(sizes)) n_star &lt;- exp(solve(coef(fit)[-1], -coef(fit)[1])) data.frame(n_star=n_star, alpha=alpha) })) res ## n_star alpha ## 1 31.13450 4.0 ## 2 51.84923 4.5 ## 3 82.37119 5.0 ## 4 144.13079 5.5 ## 5 237.34821 6.0 ## 6 374.56294 6.5 ## 7 643.04405 7.0 ## 8 1071.11484 7.5 ## 9 1725.79600 8.0 ## 10 2961.16255 8.5 ## 11 4784.16243 9.0 And finally, we can print the critical population sizes as a function of the trait complexity \\(\\alpha\\) over \\(\\beta\\). ggplot(res, aes(x=alpha, y=n_star)) + geom_line() + xlab(expression(alpha/beta)) + ylab(&quot;N*&quot;) + theme_bw() Figure 9.4: Critical population size, N*, for different skill complexities. It is intersting to observe that the criticla population sizes increases exponentially with skill complexity. This also suggests that, all being equal, very high skill levels will never be reached by finite population sizes. However, different ways of learning (e.g. teaching) could considerably decrease \\(\\alpha\\) and \\(\\beta\\) over time and so allow high skill levels. 9.1 Summary of the model Similar to the model in the chapter on Rogers’ paradox, the present model is very simple and is making many simplifications. Neverthless, it provides an intuitive understanding of how changes (up and down) in population size can affect the cultural repertoire of a population, and how it can be that simple traits thrive, while complex ones disappear. In the next chapter, we will discuss the importance of social networks, i.e. who can interact with whom. We will see that this will also have an affect (additional to the population size). 9.2 Analytical appendix and further readings It is important to note that Henrich’s paper provides an analytical model, which can give precise results without the need of modelling learning. The paper is well worth a read as it explains this analytical approach in clear terms. References "]
]
